# -*- coding: utf-8 -*-
"""Tic_Tac_Toe.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Z7-L2yQEGYHpppKd60FxJ33fGROXOjFo?usp=sharing
"""

import random


def print_board(board):
    print("\n")
    for i in range(3):
        print(f" {board[i*3]} | {board[i*3+1]} | {board[i*3+2]} ")
        if i < 2:
            print("---|---|---")
    print("\n")


def check_winner(board, player):
    win_conditions = [(0, 1, 2), (3, 4, 5), (6, 7, 8), (0, 3, 6),
                      (1, 4, 7), (2, 5, 8), (0, 4, 8), (2, 4, 6)]
    for condition in win_conditions:
        if board[condition[0]] == board[condition[1]] == board[condition[2]] == player:
            return True
    return False


def is_board_full(board):
    return all(space != " " for space in board)


def computer_move(board):
    available_moves = [i for i, space in enumerate(board) if space == " "]
    move = random.choice(available_moves)
    board[move] = "O"


def play_game():
    board = [" " for _ in range(9)]
    current_player = "X"
    game_over = False

    while not game_over:
        print_board(board)

        if current_player == "X":
            move = int(input("Enter your move (1-9): ")) - 1
            if board[move] != " ":
                print("That spot is already taken!")
                continue
            board[move] = "X"
        else:
            print("Computer's turn (O):")
            computer_move(board)

        if check_winner(board, current_player):
            print_board(board)
            print(f"{current_player} wins!")
            game_over = True
        elif is_board_full(board):
            print_board(board)
            print("It's a draw!")
            game_over = True
        else:
            current_player = "O" if current_player == "X" else "X"

    play_again = input("Do you want to play again? (y/n): ")
    if play_again.lower() == 'y':
        play_game()


play_game()
